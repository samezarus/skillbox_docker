Изоляция происходит за счёт namespaces, а ресурсы выделяются за счёт cgroups

Контейнер - програмный комплекс, запущенный на основе докер-образа

Докер-образы:

    docker search <имя образа> - поиск образа

    docker pull <имя образа> - копирование образа локальное хранилище

    docker image inspect <имя образа> - инфо о образе 

    docker image ls - список образов в локальном хранилище

    docker image tag <целевой образ> <новый образ>:<тэг> - копирование целевого образа в новый с новыи тегом

        docker image tag ubuntu:22.04 ubuntu:test (ubuntu:22.04 останется и на основе него появится ubuntu:test)

    docker image rm <имя образа> - удаление образа из локального хранилища

    docker image save -o <путь к файлу-архиву> <имя образа> - сохранение образа в файл-архив

    docker image import -m <строковый коментарий> <файл-архив> - импорт образа из файла-архива (создаться новый)

    docker image load -i <файл-архив> - воссащдание образа из файла-архива (т.е. перепишет текущий образ)

Докер-контейнеры:

    docker container ps/list - список контейнеров

    docker container rename <id контейнера> <новое имя контейнера>

    docker container commit -m <строковый коментарий> <имя контейнера> <имя образа> - создать образ 
    на основе указанного контейнера (т.е. записать состояние контейгера в образ)

    docker cp <id контейнера>:<имя файла> <путь назначения> - копирование файла из контейнера на хост

    docker cp <имя файла> <id контейнера>:<путь назначения>  - копирование файла с хоста в контейнер

    docker container stats

    docker run -it <id образа> - запуск контейнера в интерактивном режиме

    docker container exec <id контейнера> <команда> - запуск контейнера с командой

        docker container exec -it mycontainer1 /bin/bash

Том/Volume:

    docker volume ls - список томов

    docker volume inspect <имя тома>

    docker volume create --name <имя тома>

    Монтирование:

        Каталога:
            
            docker run -it --mount type=bind,source=<хостовый путь>,deatination=<путь в контейнере> <имя образа>

            Используется для прокидывания кода, конфигов и тд

        Тома:

            docker run -it --mount type=volume,source=<имя тома>,deatination=<путь в контейнере> <имя образа>

        Временную файловую систему:

            docker run -it --mount type=tmpfs,deatination=<путь в контейнере> <имя образа>

            docker run -it --tmpfs <путь в контейнере> <имя образа>
